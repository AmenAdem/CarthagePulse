server:
  port: 8080

spring:
  application:
    name: api-gateway
  
  cloud:
    gateway:
      default-filters:
        - name: AuthenticationFilter
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      
      # Global CORS configuration
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins: "*"
            allowed-methods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowed-headers: "*"
            allow-credentials: true
            max-age: 3600

  # Redis configuration for rate limiting
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  # Security configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080}

# JWT configuration
jwt:
  secret: ${JWT_SECRET:myVeryLongSecretKeyThatShouldBeAtLeast256BitsLong}
  header: Authorization
  expiration: 86400000 # 24 hours

# Circuit breaker configuration
resilience4j:
  circuitbreaker:
    instances:
      user-service-cb:
        register-health-indicator: true
        ring-buffer-size-in-closed-state: 10
        ring-buffer-size-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        record-exceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
      
      data-consumer-cb:
        register-health-indicator: true
        ring-buffer-size-in-closed-state: 10
        ring-buffer-size-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
      
      notification-service-cb:
        register-health-indicator: true
        ring-buffer-size-in-closed-state: 10
        ring-buffer-size-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50

  timelimiter:
    instances:
      user-service-cb:
        timeout-duration: 3s
      data-consumer-cb:
        timeout-duration: 5s
      notification-service-cb:
        timeout-duration: 3s

# Actuator configuration for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true

# Logging configuration
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    com.stocktracker.gateway: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Custom application properties
app:
  gateway:
    rate-limit:
      default-replenish-rate: 10
      default-burst-capacity: 20
    timeout:
      connect: 5000
      response: 30000